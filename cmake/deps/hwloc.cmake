# SPDX-FileCopyrightText: Copyright (c) 2023 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# https://docs.rapids.ai/api/rapids-cmake/stable/command/rapids_find_package.html#
include(${rapids-cmake-dir}/cpm/find.cmake)

rapids_cpm_find(hwloc 2.9.0
    CPM_ARGS

    GITHUB_REPOSITORY open-mpi/hwloc
    GIT_TAG hwloc-2.9.0
    GIT_SHALLOW TRUE
    EXCLUDE_FROM_ALL
)


if(hwloc_ADDED)
    # The template files are generated by the following commands:
    # (and modified hwloc/static-components.h and include/private/autogen/config.h files for holoscan)
    #   git clone https://github.com/open-mpi/hwloc.git
    #   cd hwloc
    #   git checkout hwloc-2.9.0
    #   ./autogen.sh
    #   mkdir install
    #   ./configure --prefix=`pwd`/install
    #
    #   TOP=/workspace/holoscan-sdk
    #   cp hwloc/static-components.h ${TOP}/public/cmake/deps/hwloc.static-components.h.in
    #   cp include/private/autogen/config.h ${TOP}/public/cmake/deps/hwloc.private.config.h.in
    #   cp include/hwloc/autogen/config.h ${TOP}/public/cmake/deps/hwloc.config.h.in

    set(_hwloc_platform_specific_files "")

    if(CMAKE_SYSTEM_PROCESSOR STREQUAL x86_64 OR CMAKE_SYSTEM_PROCESSOR STREQUAL amd64)
        set(HWLOC_X86_64_ARCH 1)
        set(_hwloc_platform_specific_files ${hwloc_SOURCE_DIR}/hwloc/topology-x86.c)
    elseif(CMAKE_SYSTEM_PROCESSOR STREQUAL aarch64 OR CMAKE_SYSTEM_PROCESSOR STREQUAL arm64)
        set(HWLOC_X86_64_ARCH 0)
    else()
        message(FATAL_ERROR "CMAKE_SYSTEM_PROCESSOR=${CMAKE_SYSTEM_PROCESSOR} is not an architecture supported by Holoscan")
    endif()

    configure_file(${CMAKE_CURRENT_LIST_DIR}/hwloc.config.h.in ${hwloc_BINARY_DIR}/include/hwloc/autogen/config.h)
    configure_file(${CMAKE_CURRENT_LIST_DIR}/hwloc.private.config.h.in ${hwloc_BINARY_DIR}/include/private/autogen/config.h)
    configure_file(${CMAKE_CURRENT_LIST_DIR}/hwloc.static-components.h.in ${hwloc_BINARY_DIR}/include/static-components.h)

    add_library(hwloc STATIC)
    # Reference: https://github.com/open-mpi/hwloc/pull/566/files
    set_target_properties(hwloc PROPERTIES LINKER_LANGUAGE C)
    # /usr/bin/ld: lib/libhwloc.a(topology.c.o): relocation R_X86_64_PC32 against symbol `stderr@@GLIBC_2.2.5' can not be used when making a shared object; recompile with -fPIC
    set_target_properties(hwloc PROPERTIES POSITION_INDEPENDENT_CODE ON)

    target_sources(hwloc
        PRIVATE
        ${hwloc_SOURCE_DIR}/hwloc/traversal.c
        ${hwloc_SOURCE_DIR}/hwloc/distances.c
        ${hwloc_SOURCE_DIR}/hwloc/memattrs.c
        ${hwloc_SOURCE_DIR}/hwloc/cpukinds.c
        ${hwloc_SOURCE_DIR}/hwloc/components.c
        ${hwloc_SOURCE_DIR}/hwloc/bind.c
        ${hwloc_SOURCE_DIR}/hwloc/bitmap.c
        ${hwloc_SOURCE_DIR}/hwloc/pci-common.c
        ${hwloc_SOURCE_DIR}/hwloc/diff.c
        ${hwloc_SOURCE_DIR}/hwloc/shmem.c
        ${hwloc_SOURCE_DIR}/hwloc/misc.c
        ${hwloc_SOURCE_DIR}/hwloc/base64.c
        ${hwloc_SOURCE_DIR}/hwloc/topology.c
        ${hwloc_SOURCE_DIR}/hwloc/topology-hardwired.c
        ${hwloc_SOURCE_DIR}/hwloc/topology-linux.c
        ${hwloc_SOURCE_DIR}/hwloc/topology-noos.c
        ${hwloc_SOURCE_DIR}/hwloc/topology-synthetic.c
        ${hwloc_SOURCE_DIR}/hwloc/topology-xml.c
        ${hwloc_SOURCE_DIR}/hwloc/topology-xml-nolibxml.c
        ${_hwloc_platform_specific_files}
    )

    unset(_hwloc_platform_specific_files)

    target_include_directories(hwloc
        PRIVATE
        ${hwloc_SOURCE_DIR}/include
        ${hwloc_BINARY_DIR}/include
    )

    set(private_headers
        ${hwloc_BINARY_DIR}/include/private/autogen/config.h
        ${hwloc_BINARY_DIR}/include/static-components.h
    )

    set(public_headers
        ${hwloc_SOURCE_DIR}/include/hwloc.h
        ${hwloc_SOURCE_DIR}/include/hwloc/rename.h
        ${hwloc_SOURCE_DIR}/include/hwloc/bitmap.h
        ${hwloc_SOURCE_DIR}/include/hwloc/helper.h
        ${hwloc_SOURCE_DIR}/include/hwloc/inlines.h
        ${hwloc_SOURCE_DIR}/include/hwloc/memattrs.h
        ${hwloc_SOURCE_DIR}/include/hwloc/cpukinds.h
        ${hwloc_SOURCE_DIR}/include/hwloc/export.h
        ${hwloc_SOURCE_DIR}/include/hwloc/distances.h
        ${hwloc_SOURCE_DIR}/include/hwloc/diff.h
        ${hwloc_SOURCE_DIR}/include/hwloc/deprecated.h
        ${hwloc_BINARY_DIR}/include/hwloc/autogen/config.h
    )

    target_sources(hwloc PRIVATE ${private_headers} ${public_headers})

    target_include_directories(hwloc
        INTERFACE
        ${hwloc_SOURCE_DIR}/include
        ${hwloc_BINARY_DIR}/include
    )

endif()
